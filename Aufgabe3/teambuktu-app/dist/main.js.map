{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/appointment.css","webpack:///./src/app/components/appointment.html","webpack:///./src/app/components/appointment.ts","webpack:///./src/app/components/appointments.css","webpack:///./src/app/components/appointments.html","webpack:///./src/app/components/appointments.ts","webpack:///./src/app/components/login.css","webpack:///./src/app/components/login.html","webpack:///./src/app/components/login.ts","webpack:///./src/app/components/root.css","webpack:///./src/app/components/root.html","webpack:///./src/app/components/root.ts","webpack:///./src/app/components/tasks.css","webpack:///./src/app/components/tasks.html","webpack:///./src/app/components/tasks.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/model/Appointment.ts","webpack:///./src/app/services/DataService.ts","webpack:///./src/app/services/SessionService.ts","webpack:///./src/app/services/SidenavService.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login';\nimport { AppointmentsComponent } from './components/appointments';\nimport { TasksComponent } from './components/tasks';\nimport { AppointmentComponent } from './components/appointment';\n\nconst routes: Routes = [\n   { path: 'login', component: LoginComponent },\n   { path: 'tasks', component: TasksComponent },\n   { path: 'appointments', component: AppointmentsComponent },\n   { path: 'appointment/:id', component: AppointmentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './components/login';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { MaterialModule } from './material-module';\nimport { RootComponent } from './components/root';\nimport { SessionService } from './services/SessionService';\nimport { TasksComponent } from './components/tasks';\nimport { AppointmentsComponent } from './components/appointments';\nimport { SidenavService } from './services/SidenavService';\nimport { DataService } from './services/DataService';\nimport { AppointmentComponent } from './components/appointment';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RootComponent,\n    TasksComponent,\n    AppointmentsComponent,\n    AppointmentComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  providers: [SessionService,SidenavService, DataService],\n  bootstrap: [RootComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwb2ludG1lbnQuY3NzIn0= */\"","module.exports = \"<h1>Appointment details</h1>\\n{{getAppointment().getName()}}\"","import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { SessionService } from '../services/SessionService';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DataService } from '../services/DataService';\nimport { switchMap } from 'rxjs/operators';\nimport { Appointment } from '../model/Appointment';\n\n@Component({\n  selector: 'appointment-component',\n  templateUrl: './appointment.html',\n  styleUrls: ['./appointment.css']\n})\nexport class AppointmentComponent {\n\n  private appointment:Appointment;\n\n  constructor(private route: ActivatedRoute,private session:SessionService, private router:Router, private dataService:DataService){\n    this.session.checkLogin(router);\n  }\n\n  getAppointment():Appointment{\n    return this.appointment;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n        let id = params['id'];\n        console.log(params)\n        console.log(\"ID: \" + id)\n        this.appointment = this.dataService.getAppointment(id); \n        console.log(this.appointment)\n    });\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwb2ludG1lbnRzLmNzcyJ9 */\"","module.exports = \"<h1>Appointments</h1>\\n<mat-nav-list>\\n    <mat-list-item *ngFor=\\\"let appointment of dataService.getAppointments()\\\">\\n        <a mat-list-item [routerLink]=\\\"['/appointment/' + appointment.getId()]\\\">\\n             {{appointment.getName()}} \\n        </a>\\n        <mat-divider></mat-divider>\\n    </mat-list-item>\\n</mat-nav-list>\\n\"","import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { SessionService } from '../services/SessionService';\nimport {Router} from \"@angular/router\";\nimport { DataService } from '../services/DataService';\n\n@Component({\n  selector: 'appointments-component',\n  templateUrl: './appointments.html',\n  styleUrls: ['./appointments.css']\n})\nexport class AppointmentsComponent {\n  constructor(private session:SessionService, private router:Router, private dataService:DataService){\n    this.session.checkLogin(router);\n  }\n\n  \n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4uY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <mat-card style=\\\"width: 300px; margin-left: auto; margin-right: auto; margin-top:64px\\\">\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-content>\\n      <form class=\\\"loginForm\\\">\\n        <mat-form-field>\\n          <input #email matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\">\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n            Please enter a valid email address\\n          </mat-error>\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n            Email is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <br/>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input #password type=\\\"password\\\" matInput placeholder=\\\"Password\\\" value=\\\"\\\">\\n        </mat-form-field>\\n        <br/>\\n        <button (click)=\\\"login(email.value, password.value)\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { SessionService } from '../services/SessionService';\nimport {Router} from \"@angular/router\";\nimport { SidenavService } from '../services/SidenavService';\nimport {MatSnackBar, MatSnackBarHorizontalPosition} from '@angular/material';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'login-component',\n  templateUrl: './login.html',\n  styleUrls: ['./login.css']\n})\nexport class LoginComponent {\n  constructor(private router: Router, \n    private session: SessionService, \n    private sideNav:SidenavService, \n    public snackBar: MatSnackBar){\n\n  }\n\n   emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher(); \n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n\n  login(email: String, password: String){\n    console.log(email + \" \" + password);\n    if(this.session.login(email, password)){\n      this.snackBar.open(\"Login successful!\", \"\", {\n        duration: 2000,\n        panelClass: ['snack-bar-success'],\n        horizontalPosition: this.horizontalPosition\n      });\n      console.log(\"Login successful, navigating...\")\n      this.sideNav.open()\n      this.router.navigate([\"/appointments\"])      \n    }\n    else {\n      this.snackBar.open(\"Login failed...\", \"\", {\n        panelClass: ['snack-bar-warning'],\n        duration: 2000,\n        horizontalPosition: this.horizontalPosition\n      });\n    }\n  }\n}","module.exports = \".container {\\n  position: absolute;\\n  top: 0px;\\n  bottom: 0px;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.sidenav {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 200px;\\n  background: #e0e0e0\\n}\\n\\n.content {\\n    padding-left: 16px;\\n    padding-right: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yb290LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1QsWUFBWTtFQUNaLFFBQVE7RUFDUixTQUFTO0NBQ1Y7O0FBRUQ7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLHdCQUF3QjtFQUN4QixhQUFhO0VBQ2IsbUJBQW1CO0NBQ3BCOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLG9CQUFvQjtDQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcm9vdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4uc2lkZW5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMjAwcHg7XG4gIGJhY2tncm91bmQ6ICNlMGUwZTBcbn1cblxuLmNvbnRlbnQge1xuICAgIHBhZGRpbmctbGVmdDogMTZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNnB4O1xufSJdfQ== */\"","module.exports = \"\\n\\n<mat-sidenav-container class=\\\"container\\\">\\n    <mat-sidenav closed #sidenav mode=\\\"side\\\" class=\\\"sidenav\\\"\\n                 [fixedInViewport]=\\\"true\\\" [fixedTopGap]=\\\"0\\\"\\n                 [fixedBottomGap]=\\\"0\\\">\\n    \\n        <mat-nav-list>\\n            <a mat-list-item [routerLink]=\\\"['/appointments']\\\">Appointments</a>\\n            <a mat-list-item [routerLink]=\\\"['/tasks']\\\">Tasks</a>\\n            <a mat-list-item [routerLink]=\\\"['/appointments']\\\">Customers</a>\\n            <a mat-list-item [routerLink]=\\\"['/appointments']\\\">Orders</a>\\n        </mat-nav-list>\\n\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component, ViewChild } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Router} from \"@angular/router\";\nimport { SessionService } from '../services/SessionService';\nimport { SidenavService } from '../services/SidenavService';\nimport { MatSidenav } from '@angular/material';\n\n@Component({\n  selector: 'root-component',\n  templateUrl: './root.html',\n  styleUrls: ['./root.css']\n})\nexport class RootComponent {\n\n  @ViewChild('sidenav') public sidenav: MatSidenav;\n\n  constructor(private router: Router, private session: SessionService, private sidenavService:SidenavService) {\n    console.log(\"Root cons\")\n    session.setRouter(router)\n    router.navigate([\"/login\"])\n  } \n\n  ngOnInit(): void {\n    this.sidenavService.setSidenav(this.sidenav);\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFza3MuY3NzIn0= */\"","module.exports = \"<h1>TASKS</h1>\\n\"","import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { SessionService } from '../services/SessionService';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'tasks-component',\n  templateUrl: './tasks.html',\n  styleUrls: ['./tasks.css']\n})\nexport class TasksComponent {\n  constructor(private session:SessionService, private router:Router){\n    this.session.checkLogin(router);\n  }\n}","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","export class Appointment{\n    constructor(private name:String) {}\n    getName():String{\n        return this.name;\n    }\n    getId(){\n        return this.name;\n    }\n}","import { Appointment } from \"../model/Appointment\";\n\nexport class DataService {\n\n    getAppointments(): Appointment[]{\n        return [\n            new Appointment(\"Appointment 1\"),\n            new Appointment(\"Appointment 2\"),\n            new Appointment(\"Appointment 3\"),\n        ];\n    }\n\n    getAppointment(id:String): Appointment{\n        for (let entry of this.getAppointments()) {\n            if(entry.getId() == id)\n                return entry;    \n        }\n        return null;\n    }\n\n    getTasks(): any{\n        return [\n            {name:\"Hallo\", link:\"Welt\"},\n            {name:\"Hallo\", link:\"Welt\"},\n            {name:\"Hallo\", link:\"Welt\"}\n        ];\n    }\n\n}","import {Router} from \"@angular/router\";\n\nexport class SessionService{\n    private loggedIn:Boolean = false;\n    private router:Router;\n\n    constructor(){\n        console.log(\"Technician con!\")\n    }\n\n    public isLoggedIn():Boolean{\n        return this.loggedIn;\n    }\n\n    public login(email:String, password:String):Boolean{\n        if(email == \"a\" && password == \"a\"){\n            this.loggedIn = true;\n        }\n        return this.loggedIn;\n    }\n\n    setRouter(router:Router){\n        this.router = router;\n    }\n\n    checkLogin(router:Router){\n        console.log(\"Checking login\")\n        console.log(this.isLoggedIn()) \n        console.log(this.router.url);\n        if(!this.isLoggedIn() && this.router.url != \"/login\"){\n            console.log(\"redirecting to login\")\n            this.router.navigate(['/login']);\n        }\n    }\n}","import { MatSidenav } from '@angular/material';\n\nexport class SidenavService {\n    private sidenav: MatSidenav;\n\n    public setSidenav(sidenav: MatSidenav) {\n        this.sidenav = sidenav;\n    }\n\n    public open() {\n        return this.sidenav.open();\n    }\n\n\n    public close() {\n        return this.sidenav.close();\n    }\n\n    public toggle(): void {\n    this.sidenav.toggle();\n   }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"],"sourceRoot":""}